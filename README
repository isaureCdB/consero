
# Consero: assembling 3D fragments of regular polymers

Consero assembles 3D fragments (coordinates in PDB format) of polymers made of 2 alternated subunits ( sequence ababa... ).
It has been primarily developed to assemble fragments of glycosaminoglycanes docked on a protein with the AutoDock3 software,
but can in principle be used in the general case stated above.

#################################
# Requirements
#################################
python2 and numpy
python3 and numpy

#################################
# Example of usage
#################################

____________________________________________________________
convert data from AutoDock3
!! you might need to change which frag indices are dp3 or dp3a !! 

./prep-data.sh 
____________________________________________________________
assemble fragments
args: [first frag index] [last frag index] [Nb_of_chains] [min_overlap rmsd] [max_overlap rmsd]

./assemble.sh 2 4 10000 1.2 3.5
____________________________________________________________
create library of monomer conformations
args: [list of pdbfiles to extract monomers from] [clustering cutoff]

./build-library.sh 0.5
____________________________________________________________
convert chains of fragments into full all-atom models
args: [chains] [first frag index] [last frag index]

./create_chains.sh f2-4_1.5A_1000poses_1000meanrk.chains 2 4 

#################################
# Statitics
#################################

The fragment library is converted into a flat table for quick search.

Queries on the fragment library use 3 dictionaries:
_ the data dictionnary, provided by structures.json (written when creating the database, at step 1)
_ the chainschema (see make_chainschena.py) that describes the format of the data and how it can be queried
_ the query "variables" dictionnary (see query.py), that contains description of the subdata we are interested in

For details on the data formats, see make_chainschema.py
For an example of query, see the jupyter-notebook exemple_stats.ipynb
